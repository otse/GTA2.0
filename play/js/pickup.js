// Generated by CoffeeScript 2.3.0
(function() {
  gg.Pickup = class Pickup extends gg.Sprite {
    constructor(props) {
      var model, ref, sprite;
      model = gg.weps[((ref = props.states) != null ? ref.model : void 0) || props.model];
      props.z = 64;
      props.r = 0;
      sprite = {
        elevation: 2,
        path: `nontile/mcitems/${model.sty}.png`,
        // path: "nontile/skeleton.png"
        hasShadow: true,
        sprite: {
          width: 29,
          height: 29
        }
      };
      super(props, sprite);
      this.model = model;
      this.type = 'Pickup';
      if (!props.net && (gg.ed == null)) {
        props.hide = true;
      }
      this.build();
      if (this.yaw == null) {
        this.yaw = {
          value: 0,
          period: 0
        };
      }
    }

    step() {
      var base, yaw;
      yaw = this.yaw;
      base = 4;
      yaw.period += 0.02 * gg.timestep;
      if (yaw.period > Math.PI * 2) {
        yaw.period -= Math.PI * 2;
      }
      yaw.value = base * Math.cos(yaw.period);
      // console.log yaw.value
      this.sprite.elevation = base + yaw.value;
      this.keyframe[2] += 0.016 * 0.5;
      super.step();
      this.pose();
      return 1;
    }

  };

  gg.Gun = class Gun {
    constructor(props, model) {}

  };

  gg.Melee = class Melee {
    constructor(props, model) {}

  };

  gg.trails = [];

  gg.Trail = class Trail {
    constructor(props1) {
      var geometry;
      this.props = props1;
      gg.trails.push(this);
      this.made = Date.now();
      this.material = new THREE.LineBasicMaterial({
        color: 0xffffff,
        transparent: true,
        opacity: .7
      });
      geometry = new THREE.Geometry;
      geometry.vertices.push(new THREE.Vector3(this.props.x, this.props.y, 65));
      geometry.vertices.push(new THREE.Vector3(this.props.to.x, this.props.to.y, 65));
      this.line = new THREE.Line(geometry, this.material);
      gg.scene.add(this.line);
    }

    dtor() {
      var i;
      gg.scene.remove(this.line);
      i = gg.trails.indexOf(this);
      gg.trails.splice(i, 1);
      return true;
    }

    step() {
      this.material.opacity -= 0.05;
      if (this.made < Date.now() - 250) {
        this.dtor();
      }
      return true;
    }

  };

}).call(this);
