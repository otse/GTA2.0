// Generated by CoffeeScript 2.3.0
(function() {
  gg.Decal = class Decal extends gg.Sprite {
    constructor(props) {
      var decal, sprite;
      // props.hide = true
      decal = props.states ? props.states.decal : props.decal;
      decal = gg.decals[decal] || gg.decals.err;
      if (decal.scale == null) {
        // props.r = (Math.PI *2) * Math.random()
        decal.scale = 1;
      }
      if (decal.hasShadow == null) {
        decal.hasShadow = false;
      }
      if (decal.normal == null) {
        decal.normal = false;
      }
      sprite = {
        elevation: .05,
        path: decal.sty,
        normal: decal.normal,
        hasShadow: !!decal.hasShadow,
        x: decal.x || 0,
        sprite: {
          width: decal.sprite.width,
          height: decal.sprite.height
        },
        sheet: {
          width: decal.sheet.width,
          height: decal.sheet.height
        },
        scale: decal.scale
      };
      super(props, sprite);
      this.understeer = false;
      this.build();
      this.type = 'Decal';
      this.mesh.ggsolid = this; // arb prop
      this.frame(decal.frame || 0, decal.y);
      // @material.polygonOffset = true
      // @material.polygonOffsetFactor = -0.1
      if ((props.states != null) && props.states.spin) {
        this.embody();
        this.dynamicBody.SetAngularVelocity(props.states.spin);
      }
      this.pose();
    }

    embody() {
      this.bodyDef = new box2d.b2BodyDef();
      this.bodyDef.type = box2d.b2BodyType.b2_dynamicBody;
      this.bodyDef.allowSleep = false;
      this.circleShape = new box2d.b2CircleShape(1 / gg.scaling);
      this.fixtureDef = new box2d.b2FixtureDef;
      this.fixtureDef.shape = this.circleShape;
      this.fixtureDef.density = 1;
      this.fixtureDef.filter.categoryBits = gg.masks.casings;
      this.fixtureDef.filter.maskBits = gg.masks.solid | gg.masks.casings;
      this.bodyDef.position.Set(this.props.x / gg.scaling, this.props.y / gg.scaling);
      this.dynamicBody = gg.world.CreateBody(this.bodyDef);
      this.dynamicBody.SetTransform(this.dynamicBody.GetPosition(), this.props.r);
      this.dynamicBody.CreateFixture(this.fixtureDef);
      this.dynamicBody.SetLinearDamping(0.5);
      this.dynamicBody.SetAngularDamping(2.5);
      return true;
    }

    dtor() {
      if (this.dynamicBody != null) {
        gg.world.DestroyBody(this.dynamicBody);
      }
      this.mesh.ggsolid = null;
      super.dtor();
      return true;
    }

    step() {
      var pos;
      // super()
      if (this.dynamicBody != null) {
        pos = this.dynamicBody.GetPosition();
        this.props.x = pos.x * gg.scaling;
        this.props.y = pos.y * gg.scaling;
        this.props.r = this.dynamicBody.GetAngle();
        this.pose();
      }
      return true;
    }

  };

  gg.Tree = class Tree extends gg.Sprite {
    constructor(props) {
      var sprite;
      if (props.actualx != null) {
        props.x = props.actualx;
      }
      if (props.actualy != null) {
        props.y = props.actualy;
      }
      sprite = {
        elevation: 64,
        path: 'nontile/tree.png',
        normal: false,
        hasShadow: true,
        sprite: {
          width: 64,
          height: 64
        },
        sheet: {
          width: 64,
          height: 64
        },
        scale: 1
      };
      super(props, sprite);
      this.understeer = false;
      gg.tree = this; // debug
      
      // @frame 0, 0
      this.type = 'Tree';
      this.mesh.ggsolid = this; // arb prop
      
      // trees are ugly, fuck it;
      this.pose();
    }

    step() {
      return false;
    }

  };

  gg.decals = {
    err: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .75,
      frame: 0,
      scale: .37
    },
    // RED BLOODS:
    b0: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .75,
      frame: 0,
      normal: true
    },
    b1: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .75,
      frame: 1,
      normal: true
    },
    b2: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .75,
      frame: 2,
      normal: true
    },
    b3: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .75,
      frame: 3,
      normal: true
    },
    b4: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .5,
      frame: 0,
      normal: true
    },
    b5: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .5,
      frame: 1,
      normal: true
    },
    b6: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .5,
      frame: 2,
      normal: true
    },
    b7: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .5,
      frame: 3,
      normal: true
    },
    // GREEN BLOODS
    g0: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .25,
      frame: 0,
      normal: true
    },
    g1: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .25,
      frame: 1,
      normal: true
    },
    g2: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .25,
      frame: 2,
      normal: true
    },
    g3: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: .25,
      frame: 3,
      normal: true
    },
    g4: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: 0,
      frame: 0,
      normal: true
    },
    g5: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: 0,
      frame: 1,
      normal: true
    },
    g6: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: 0,
      frame: 2,
      normal: true
    },
    g7: {
      sty: 'nontile/bloods.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 128,
        height: 128
      },
      y: 0,
      frame: 3,
      normal: true
    },
    
    // CASINGS:
    c1: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .75,
      frame: 0,
      scale: .37
    },
    c2: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .75,
      frame: 1,
      scale: .4
    },
    c3: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .75,
      frame: 2,
      scale: .4
    },
    c4: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .75,
      frame: 3,
      scale: .4
    },
    c5: {
      sty: 'nontile/casings.png',
      sprite: {
        width: 8,
        height: 8
      },
      sheet: {
        width: 32,
        height: 32
      },
      y: .5,
      frame: 0,
      scale: .4
    },
    // SCRUBS:
    scrub1: {
      sty: 'nontile/scrubs.png',
      sprite: {
        width: 16,
        height: 16
      },
      sheet: {
        width: 64,
        height: 64
      },
      y: .75,
      frame: 0,
      hasShadow: false
    },
    // normal: true
    // scale: 1
    scrub2: {
      sty: 'nontile/scrubs.png',
      sprite: {
        width: 32,
        height: 32
      },
      sheet: {
        width: 64,
        height: 64
      },
      x: 16,
      y: .5,
      frame: 0,
      hasShadow: false
    }
  };

  // normal: true
// scale: 1

}).call(this);
