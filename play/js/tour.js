// Generated by CoffeeScript 2.3.0
(function() {
  var notice, text;

  text = '<p> <key>W</key><key>A</key><key>S</key><key>D</key> to move, <key>SPACE</key> to use, <key>Z</key><key>X</key> to zoom in/out<br /> </p> <p> <key>SHIFT</key> to walk/run, <key>E</key> to interact, RIGHT MOUSE to strafe/aim </p> <!--<p> <key>UP</key> to bring up your phone, <key>ENTER</key> and <key>ESC</key> for menus </p>--> <p> <key>F3</key> to toggle minimap </p>';

  gg.Tour = (function() {
    class Tour {
      constructor() {
        gg.Tour.prototype.instance = this;
        this.link = $('<a href="javascript:;">Controls</a><br />');
        this.link.click(() => {
          return this.build();
        });
        this.slide = -1;
        $('#links').append(this.link);
      }

      build() {
        var ref, ref1;
        if ((ref = gg.Notice.prototype.instance) != null ? ref.built : void 0) {
          gg.Notice.prototype.instance.destroy();
        }
        if ((ref1 = gg.Settings.prototype.instance) != null ? ref1.built : void 0) {
          gg.Settings.prototype.instance.destroy();
        }
        if (this.built) {
          return;
        }
        this.built = true;
        this.tour = $('<div class="popup" id="tour">');
        this.tour.append('<div class="content">' + text + ' </div>');
        this.leave = $('<div class="button">close</div>');
        this.leave.click(() => {
          return this.destroy();
        });
        this.options = $('<div class="options">');
        this.options.append(this.leave);
        this.tour.append(this.options);
        $('#overlay').append(this.tour);
        return true;
      }

      destroy() {
        this.tour.remove();
        this.built = false;
        return true;
      }

    };

    Tour.prototype.instance = null;

    return Tour;

  }).call(this);

  notice = '<p>There are guns around the map. This is temporary.</p> <p>Have a look at the <a target="_blank" href="armory">armory</a>.';

  gg.Notice = (function() {
    class Notice {
      constructor() {
        gg.Notice.prototype.instance = this;
        this.build();
      }

      build() {
        var ref;
        if ((ref = gg.Tour.prototype.instance) != null ? ref.built : void 0) {
          gg.Tour.prototype.instance.destroy();
        }
        if (this.built) {
          return;
        }
        this.built = true;
        this.element = $('<div class="popup" id="updates">');
        this.element.append('<p>Notice</p>');
        this.element.append(notice);
        this.options = $('<div class="options">');
        this.leave = $('<div class="next">close</div>');
        this.leave.click(function() {
          gg.notice.destroy();
          return true;
        });
        this.options.append(this.leave);
        this.element.append(this.options);
        $('#overlay').append(this.element);
        return true;
      }

      destroy() {
        this.element.remove();
        this.built = false;
        return true;
      }

    };

    Notice.prototype.instance = null;

    return Notice;

  }).call(this);

}).call(this);
