// Generated by CoffeeScript 2.3.0
(function() {
  //# shittest file in the observable galaxy
  var activators;

  gg.Map.prototype.plaster = function() {
    return false; //pe
  };

  activators = ['Table', 'Desk', 'Chair', 'Couch', 'Lab Freezer', 'Vacuum Oven', 'Incubator', 'Generator', 'Worklight', 'Terminal', 'Teleporter', 'ATM', 'Vending Machine', 'Dumpster'];

  gg.idpoolforprops = function(r) {
    var vjson;
    if (!!~activators.indexOf(r.props)) {
      gg.Activator.prototype.idpool = Math.min(gg.Activator.prototype.idpool, props.id);
    } else if (r.type === 'Walk') {
      vjson = JSON.parse(r.vjson || null);
      if (vjson != null) {
        gg.walkpool = Math.max(vjson.id || 0, gg.walkpool);
      }
      if (vjson.id != null) {
        gg.walks[vjson.id] = gg.visualFactory(r);
      }
    } else if (r.type === 'Parking space') {
      vjson = JSON.parse(r.vjson || null);
      if (vjson != null) {
        gg.parkingspacepool = Math.max(vjson.id || 0, gg.parkingspacepool);
      }
    } else if (r.type === 'Entity') {
      vjson = JSON.parse(r.vjson || null);
      if (vjson != null) {
        gg.entitypool = Math.max(vjson.id || 0, gg.entitypool);
      }
    }
    return 0;
  };

  gg.Map.prototype.cyancubes = function() {
    var a, affect, i, j, len, len1, ref, ref1, v;
    affect = 0;
    ref = this.actives;
    for (i = 0, len = ref.length; i < len; i++) {
      a = ref[i];
      ref1 = a.visuals;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        v = ref1[j];
        if (v.cube) { // func exists
          if (v.cube()) {
            affect++;
          }
        }
      }
    }
    // console.log "visualized #{affect} ents into cyan cubes"
    return true;
  };

}).call(this);
